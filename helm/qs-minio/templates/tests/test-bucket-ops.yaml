{{- $inst := index .Values "pharia-minio" -}}
{{- if and $inst $inst.enabled }}
apiVersion: v1
kind: Pod
metadata:
  name: {{ include "qs-minio.fullname" . }}-test-bucket-ops
  labels:
    {{- include "qs-minio.labels" . | nindent 4 }}
    helm.sh/chart: {{ include "qs-minio.chart" . }}
    app.kubernetes.io/component: test
  annotations:
    "helm.sh/hook": test
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  restartPolicy: Never
  containers:
    - name: bucket-ops
      image: minio/mc:latest
      imagePullPolicy: IfNotPresent
      env:
        - name: MINIO_ROOT_USER
          valueFrom:
            secretKeyRef:
              name: pharia-minio
              key: root-user
        - name: MINIO_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: pharia-minio
              key: root-password
      command:
        - /bin/sh
        - -ec
        - |
          set -o pipefail

          echo "══════════════════════════════════════════════════════════════"
          echo "  MinIO Bucket Operations Test"
          echo "  Instance: pharia-minio"
          echo "══════════════════════════════════════════════════════════════"
          echo

          PASSED=0
          FAILED=0

          echo "🛠️  Setting mc alias"
          if mc alias set local http://pharia-minio:{{ $inst.service.port }} "$MINIO_ROOT_USER" "$MINIO_ROOT_PASSWORD" --api S3v4 >/dev/null 2>&1; then
            echo "  ✅ Alias configured"
            PASSED=$((PASSED+1))
          else
            echo "  ❌ Failed to configure alias"
            FAILED=$((FAILED+1))
          fi

          TEST_BUCKET="helm-test-bucket-$(date +%s)"
          echo "🪣  Test Bucket: $TEST_BUCKET"
          echo "1️⃣  Creating bucket"
          if mc mb local/$TEST_BUCKET >/dev/null 2>&1; then
            echo "  ✅ Bucket created"
            PASSED=$((PASSED+1))
          else
            echo "  ❌ Bucket creation failed"
            FAILED=$((FAILED+1))
          fi

          echo "2️⃣  Uploading object"
          echo "hello helm" > /tmp/object.txt
          if mc cp /tmp/object.txt local/$TEST_BUCKET/object.txt >/dev/null 2>&1; then
            echo "  ✅ Object uploaded"
            PASSED=$((PASSED+1))
          else
            echo "  ❌ Object upload failed"
            FAILED=$((FAILED+1))
          fi

          echo "3️⃣  Verifying object presence"
          if mc stat local/$TEST_BUCKET/object.txt >/dev/null 2>&1; then
            echo "  ✅ Object exists"
            PASSED=$((PASSED+1))
          else
            echo "  ❌ Object missing"
            FAILED=$((FAILED+1))
          fi

          echo "4️⃣  Validating object content"
          READBACK=$(mc cat local/$TEST_BUCKET/object.txt 2>/dev/null)
          ORIGINAL=$(cat /tmp/object.txt)
          if [ "$READBACK" = "$ORIGINAL" ]; then
            echo "  ✅ Content matches"
            PASSED=$((PASSED+1))
          else
            echo "  ❌ Content mismatch"
            echo "     Original: $ORIGINAL"
            echo "     Readback: $READBACK"
            FAILED=$((FAILED+1))
          fi

          echo "5️⃣  Deleting object"
          if mc rm local/$TEST_BUCKET/object.txt >/dev/null 2>&1; then
            echo "  ✅ Object deleted"
            PASSED=$((PASSED+1))
          else
            echo "  ❌ Failed to delete object"
            FAILED=$((FAILED+1))
          fi

          echo "6️⃣  Removing bucket"
          if mc rb --force local/$TEST_BUCKET >/dev/null 2>&1; then
            echo "  ✅ Bucket removed"
            PASSED=$((PASSED+1))
          else
            echo "  ❌ Failed to remove bucket"
            FAILED=$((FAILED+1))
          fi

          echo "7️⃣  Confirming bucket removal"
          if mc stat local/$TEST_BUCKET >/dev/null 2>&1; then
            echo "  ❌ Bucket still present"
            FAILED=$((FAILED+1))
          else
            echo "  ✅ Bucket absence confirmed"
            PASSED=$((PASSED+1))
          fi

          echo
          echo "══════════════════════════════════════════════════════════════"
          echo "  Test Summary"
          echo "══════════════════════════════════════════════════════════════"
          echo "  Steps Passed : $PASSED"
          echo "  Steps Failed : $FAILED"
          echo "══════════════════════════════════════════════════════════════"

          if [ $FAILED -gt 0 ]; then
            echo "❌ MinIO bucket operations test failed"
            exit 1
          fi
          echo "✅ All MinIO bucket operation tests passed"
{{- end }}
