
fullnameOverride: "qs-pgbouncer"

replicaCount: 1

databases:
  "*":
    host: "example-postgresql"
    port: 5432


# Main pgbouncer container resources
## ref: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
resources:
  limits:
    cpu: "2"
    memory: 200Mi
  requests:
    cpu: "1"
    memory: 50Mi

pgbouncerExporter:
  - name: metrics-exporter
    image: quay.io/prometheuscommunity/pgbouncer-exporter:v0.11.0
    ports:
      - name: metrics
        containerPort: 9127
    args:
      - --web.listen-address=:9127
      - --web.telemetry-path=/metrics
      - --log.level=error
      - --pgBouncer.connectionString=postgres://$(PGBOUNCER_USER):$(PGBOUNCER_PWD)@localhost:6432/pgbouncer?sslmode=disable&connect_timeout=10
    env:
      - name: PGBOUNCER_USER
        valueFrom:
          secretKeyRef:
            name: "pgbouncer-cred" # Name of the secret containing PgBouncer credentials
            key:  user
      - name: PGBOUNCER_PWD
        valueFrom:
          secretKeyRef:
            name: "pgbouncer-cred" # Name of the secret containing PgBouncer credentials
            key:  password
    livenessProbe:
      initialDelaySeconds: 3
      timeoutSeconds: 3
      httpGet:
        path: /
        port: metrics
    readinessProbe:
      initialDelaySeconds: 5
      timeoutSeconds: 10
      httpGet:
        path: /
        port: metrics
    securityContext:
      runAsUser: 1001
      runAsGroup: 1001
      runAsNonRoot: true
      seccompProfile:
        type: RuntimeDefault

serviceMonitor:
  enabled: true
  interval: 30s
  scrapeTimeout: 10s
  path: /metrics
  labels: {}
  annotations: {}
  honorLabels: false
  metricRelabelings: []
  relabelings: []
